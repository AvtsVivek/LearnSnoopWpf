<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>exe</OutputType>
	  <UseWPF>true</UseWPF>
    <!--<TargetFramework Condition="'$(TargetFramework)' == ''">$(MinTargetFramework)</TargetFramework>-->
	  <TargetFramework>net9.0-windows</TargetFramework>
    <!--<PlatformTarget Condition="'$(PlatformTarget)' == ''">x86</PlatformTarget>-->
    <!--<ApplicationIcon>.\Snoop.ico</ApplicationIcon>-->
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>

    <!--<RollForward>Major</RollForward> --><!-- can be removed as soon as we build with net6.0 -->
    
    <!--<ApplicationIcon>.\Snoop.ico</ApplicationIcon>-->
	<!--<ApplicationManifest>../Shared/app.manifest</ApplicationManifest>-->
  </PropertyGroup>
	<ItemGroup>
		<PackageReference Include="CommandLineParser" Version="2.9.1" />
		<PackageReference Include="JetBrains.Annotations" Version="2025.2.2" />
	</ItemGroup>
	<ItemGroup>
	  <ProjectReference Include="..\FindViewModel.Core\FindViewModel.Core.csproj" />
	  <ProjectReference Include="..\FindViewModel.MalDll\FindViewModel.MalDll.csproj" />
      <ProjectReference Include="..\Snoop.Core\Snoop.Core.csproj" />
	</ItemGroup>

  <!--<PropertyGroup>
    <RootBuild Condition="'$(RootBuild)' == ''">True</RootBuild>
    <AssemblyName>$(AssemblyName).$(PlatformTarget)</AssemblyName>
    <TargetName>$(AssemblyName)</TargetName>
  </PropertyGroup>-->

  <!--<PropertyGroup>
    <DefaultItemExcludes>$(DefaultItemExcludes);obj/**/*</DefaultItemExcludes>
  </PropertyGroup>-->
  
  <!--<ItemGroup>
    <ApplicationManifest Include="../Shared/app.manifest" />
  </ItemGroup>-->
   
  <!--<Target Name="CompileOtherArches" AfterTargets="Build" Condition="'$(RootBuild)' == 'True'">
    --><!--
    Need to force re-evaluate after Restore, such that obj\x64\Snoop.InjectorLauncher.csproj.nuget.g.targets gets imported after it's created by Restore.
    If we reuse the previous evaluation used by Restore, it won't be imported there as it didn't exist yet.
    Setting a dummy property forces a new evaluation as it can't reuse the previous eval with a different set of properties.
    --><!--
    <Message Text="Building injector launcher for x64..." Importance="High" />
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="Restore" Properties="RootBuild=False;Configuration=$(Configuration);PlatformTarget=x64" />
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="Build" Properties="RootBuild=False;Configuration=$(Configuration);PlatformTarget=x64;DummyPropertyToForceReevaluateAfterRestore=true" />

    <Message Text="Building injector launcher for ARM64..." Importance="High" />
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="Restore" Properties="RootBuild=False;Configuration=$(Configuration);PlatformTarget=ARM64;TargetFramework=$(MinCoreTargetFramework)" />
    <MSBuild Projects="$(MSBuildProjectFile)" Targets="Build" Properties="RootBuild=False;Configuration=$(Configuration);PlatformTarget=ARM64;TargetFramework=$(MinCoreTargetFramework);DummyPropertyToForceReevaluateAfterRestore=true" />
  </Target>-->
</Project>